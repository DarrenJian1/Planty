{"version":3,"sources":["images/LeafyIcon.png","images/Untitled_Artwork 6.png","components/layout/Header.js","components/layout/TabBarBottom.js","components/pages/About.js","components/DatePicking.js","components/Plant.js","components/materialUI/SearchBar.js","components/AddPlant.js","components/Plants.js","components/popup/PopUpTitle.js","components/popup/RemoveRow.js","components/popup/BSTableConstants.js","components/popup/DatePicking.js","components/popup/PopUp.js","components/addPopup/AddPopUp.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","headerStyle","background","color","textAlign","padding","margin","position","height","borderBottom","linkStyle","textDecoration","width","logoDiv","paddingTop","justifyContent","logoStyle","display","Header","style","to","src","logo","alt","TabBarBottom","props","state","selectedTab","hidden","fullScreen","redirect","pageText","backgroundColor","marginTop","marginBottom","onClick","e","preventDefault","setState","this","push","id","top","bottom","unselectedTintColor","tintColor","barTintColor","Item","title","key","icon","selectedIcon","selected","badge","onPress","data-seed","PlusOutlined","dot","toggleAddPop","uri","React","Component","styles","buttonStyle","borderRadius","border","buttonFlexStyle","uploadStyle","Radium","data","getAllIDs","localStorage","getItem","allIDsArray","split","i","length","ID","info","uploadedData","headers","label","flexDirection","onDrop","console","log","onError","err","file","inputElem","reason","noDrag","addRemoveButton","onRemoveFile","dropArea","borderColor","dropAreaActive","dropFile","fileSizeInfo","lineHeight","fileNameInfo","fontSize","removeButton","progressBar","allIDs","setItem","replace","DatePicking","onChange","date","onDateSubmit","placeholderText","DOLW","className","cName","closeOnScroll","target","document","withPortal","portalId","Plant","dateState","time","Date","isOpen","handleClick","handleCancel","handleSelect","stringDate","getMonth","slice","getDate","getFullYear","addDOLW","plant","onSubmit","name","getElementById","blur","value","isMobile","monthMap","dateConfig","format","caption","step","plantStyle","show","deleteMode","delPlant","bind","exitStyle","CloseOutlined","togglePop","viewMoreStyle","leafyIcon","contentStyle","nameStyle","lastWater","dolwTitle","floatLeft","colonStyle","dolwForm","onSelect","onCancel","headerFormat","confirmText","cancelText","opacity","cursor","left","right","overflow","maxHeight","float","backgroundRepeat","useStyles","makeStyles","theme","createStyles","root","flexGrow","search","shape","fade","palette","common","white","marginLeft","breakpoints","up","spacing","searchIcon","pointerEvents","alignItems","trashIcon","trashRed","inputRoot","inputInput","paddingLeft","transition","transitions","create","formControl","minWidth","selectEmpty","SearchBar","classes","initialSortBy","useState","sort","setSort","setSearch","Toolbar","InputBase","placeholder","input","inputProps","handleSearch","FormControl","InputLabel","Select","labelId","handleChange","MenuItem","Plants","sortBy","sortPlants","winHeight","window","innerHeight","headerHeight","$","outerHeight","searchHeight","contentHeight","css","Fragment","searchBar","plants","map","PopUpTitle","updateItem","popup","currId","titleStyle","notEdit","titleForm","type","titleFormEdit","RemoveRow","removeRow","handleRemoveSpecificRow","rowIndex","removeSpecificRowState","defaultProps","defaultSorted","dataField","order","options","withFirstAndLast","hidePageListOnlyOnePage","sizePerPageList","text","PopUp","prop","rows","currIndex","index","inputState","plantArray","updatedPlant","splice","eachRow","toggle","handleDateClick","handleDateCancel","handleDateSelect","currentIndex","handleEditClick","handleOutsideClick","classList","contains","removeRowFormatter","cell","row","columns","colum","colIndex","isDummyField","editable","formatter","newDate","undefined","b","getUTCMonth","getUTCDate","getUTCFullYear","editorRenderer","editorProps","column","columnIndex","columnsMobile","editStyle","EditOutlined","bootstrap4","keyField","BSTConst","pagination","paginationFactory","cellEdit","cellEditFactory","mode","afterSaveCell","oldValue","newValue","col","updateDOLW","blurToSave","AddPopUp","addPlant","onSubmitName","click","View","inputFields","eachLine","setWidth","Text","textRight","textInput","radium_styles","base","add_Button","zIndex","StyleSheet","sameLine","paddingBottom","loadPlants","initialStateArray","IDsArray","plantName","currDOLW","loadPlant","nowTimeStamp","now","utcOffset","getTime","getTimezoneOffset","App","targetElement","handleWindowSizeChange","innerWidth","showTargetElement","disableBodyScroll","allowTouchMove","el","body","getAttribute","parentNode","hideTargetElement","enableBodyScroll","seen","addPopup","item","updateString","nameSortPlants","dateSortPlants","allPlants","a","nameA","toUpperCase","nameB","sortedIDs","includes","newIDsArray","removeItem","filter","newPlant","uuidv4","dpValue","idt","toISOString","addEventListener","removeEventListener","clearAllBodyScrollLocks","querySelector","basename","exact","path","render","component","About","Boolean","location","hostname","match","require","ReactDOM","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d536d63b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/LeafyIcon.e793a57f.png\";","module.exports = __webpack_public_path__ + \"static/media/Untitled_Artwork 6.75ec810c.png\";","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport logo from '../../images/Untitled_Artwork 6.png';\n\nfunction Header() {\n    return (\n        <header style={headerStyle}>\n            {/* <h1 style={titleStyle}>My Plants</h1> */}\n            {/* <Link style={linkStyle} to=\"/\">Home</Link> | <Link style={linkStyle} to=\"/about\">About</Link> */}\n            <div style={logoDiv}>\n                <Link to=\"/\" style={linkStyle}>\n                    <img src={logo} style={logoStyle} alt=\"logo\"></img>\n                </Link>\n            </div>\n            \n        </header>\n    )\n}\n\nconst headerStyle = {\n    background: '#fff',\n    //background: '#cef9e0',\n    color: '#000',\n    textAlign: 'left',\n    padding: '1px',\n    margin: '0px',\n    position: 'sticky',\n    height: '54px',\n    borderBottom: 'solid 1px #ededed',\n}\nconst titleStyle = {\n    fontSize: '20px',\n    color: '#cef9e0'\n}\n\nconst linkStyle = {\n    color: '#000',\n    textDecoration: 'none',\n    width: '50px',\n}\n\nconst logoDiv = {\n    paddingTop: '5px',\n    justifyContent: 'center',\n    width: '135px',\n    margin: '0 auto',\n}\n\nconst logoStyle = {\n    height: '60px',\n    //backgrounnd: '#cef9e0',\n    display: 'block',\n    margin: '0 auto',\n}\n\nexport default Header;","import React from 'react';\nimport { TabBar } from 'antd-mobile';\nimport { Link } from 'react-router-dom';\nimport {Redirect} from 'react-router';\nimport {PlusOutlined} from '@ant-design/icons';\nimport $ from 'jquery';\n\nclass TabBarBottom extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedTab: '',\n      hidden: false,\n      fullScreen: false,\n      redirect: false,\n    };\n  }\n \n  renderContent(pageText) {\n    return (\n      <div style={{ backgroundColor: 'white', height: '100%', textAlign: 'center' }}>\n        <div style={{ paddingTop: 60 }}>Clicked “{pageText}” tab， show “{pageText}” information</div>\n        <a style={{ display: 'block', marginTop: 40, marginBottom: 20, color: '#108ee9' }}\n          onClick={(e) => {\n            e.preventDefault();\n            this.setState({\n              hidden: !this.state.hidden,\n            });\n          }}\n        >\n          Click to show/hide tab-bar\n        </a>\n        <a style={{ display: 'block', marginBottom: 600, color: '#108ee9' }}\n          onClick={(e) => {\n            e.preventDefault();\n            this.setState({\n              fullScreen: !this.state.fullScreen,\n            });\n          }}\n        >\n          Click to switch fullscreen\n        </a>\n      </div>\n    );\n  }\n\n  render() {\n    if (this.state.redirect) {\n        this.setState({redirect:false})\n        return <Redirect push to={this.state.selectedTab}/>;\n    }\n    return (\n      <div id = \"tabBarBottom\" style={this.state.fullScreen ? { position: 'fixed', height: '100%', width: '100%', top: 0 } : { position: 'absolute', bottom: 0, width: '100%'}}>\n        <TabBar\n          unselectedTintColor=\"#949494\"\n          tintColor=\"#33A3F4\"\n          barTintColor=\"white\"\n          hidden={this.state.hidden}\n          height=\"200px\"\n        >\n          <TabBar.Item\n            title=\"Home\"\n            key=\"Home\"\n            icon={<div style={{\n              width: '22px',\n              height: '22px',\n              background: 'url(https://zos.alipayobjects.com/rmsportal/sifuoDUQdAFKAVcFGROC.svg) center center /  21px 21px no-repeat' }}\n            />\n            }\n            selectedIcon={<div style={{\n              width: '22px',\n              height: '22px',\n              background: 'url(https://zos.alipayobjects.com/rmsportal/iSrlOTqrKddqbOmlvUfq.svg) center center /  21px 21px no-repeat' }}\n            />\n            }\n            selected={this.state.selectedTab === '/'}\n            badge={1}\n            onPress={() => {\n              this.setState({\n                selectedTab: '/',\n                redirect: true,\n              });\n            }}\n            data-seed=\"logId\"\n          >\n            {/*this.renderContent('Life')*/}\n          </TabBar.Item>\n          \n          <TabBar.Item\n            icon={\n            //   <div style={{\n            //     width: '22px',\n            //     height: '22px',\n            //     background: 'url(https://zos.alipayobjects.com/rmsportal/psUFoAMjkCcjqtUCNPxB.svg) center center /  21px 21px no-repeat' }}\n            //   />\n                \n                <PlusOutlined id=\"plusTabBar\" />\n            }\n            selectedIcon={\n            //   <div style={{\n            //     width: '22px',\n            //     height: '22px',\n            //     background: 'url(https://zos.alipayobjects.com/rmsportal/IIRLrXXrFAhXVdhMWgUI.svg) center center /  21px 21px no-repeat' }}\n            //   />\n                <PlusOutlined id=\"plusTabBar\" style={{color: 'blue'}}/>\n            }\n            title=\"Add Plant\"\n            key=\"addPlant\"\n            dot\n            //selected={this.state.selectedTab === '/'}\n            onPress={() => {\n              this.setState({\n                selectedTab: '/',\n                redirect: true,\n              });\n              this.props.toggleAddPop();\n            }}\n          >\n            {/*this.renderContent('Friend')*/}\n          </TabBar.Item>\n          <TabBar.Item\n            icon={{ uri: 'https://zos.alipayobjects.com/rmsportal/asJMfBrNqpMMlVpeInPQ.svg' }}\n            selectedIcon={{ uri: 'https://zos.alipayobjects.com/rmsportal/gjpzzcrPMkhfEqgbYvmN.svg' }}\n            title=\"About\"\n            key=\"About\"\n            hidden=\"true\"\n            selected={this.state.selectedTab === '/About'}\n            onPress={() => {\n              this.setState({\n                selectedTab: '/About',\n                redirect: true,\n              });\n            }}\n          >\n            {/*this.renderContent('My')*/}\n          </TabBar.Item>\n        </TabBar>\n      </div>\n    );\n  }\n}\n\nexport default TabBarBottom;","import React from 'react';\nimport TabBarBottom from '../layout/TabBarBottom';\nimport { CSVLink } from \"react-csv\";\nimport {CSVReader} from 'react-papaparse';\nimport Radium from 'radium';\n\n\nfunction About(props) {\n\n    const csvStyle = {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'center',\n        //marginBottom: '10px',\n    }\n\n    const uploadStyle = {\n        dropArea: {\n            borderColor: 'pink',\n            borderRadius: '20px',\n            width: '300px',\n            height: '70px',\n            \n          },\n          dropAreaActive: {\n            borderColor: 'red',\n          },\n          dropFile: {\n            width: '300px',\n            height: '150px',\n            borderRadius: '20px',\n            background: '#transparent',\n            // border: 'solid 1px',\n          },\n          fileSizeInfo: {\n            color: '#000',\n            background: 'transparent',\n            borderRadius: 3,\n            lineHeight: 1,\n            marginBottom: '0.6em',\n            padding: '0 0.4em',\n          },\n          fileNameInfo: {\n            color: '#000',\n            background: 'transparent',\n            borderRadius: 3,\n            fontSize: 14,\n            lineHeight: 1,\n            padding: '0 0.4em',\n          },\n          removeButton: {\n            color: '#cd2c2c',\n          },\n          progressBar: {\n            backgroundColor: 'pink',\n          },\n          \n    }\n\n    const headers=[\n        {label: 'ID', key: \"id\"},\n        {label: 'Info', key: \"info\"}\n    ]\n\n    var data = [];\n\n    var getAllIDs = localStorage.getItem('');\n    //data.push({allIDs: getAllIDs})\n    if(getAllIDs){\n        var allIDsArray = getAllIDs.split('\\0');\n        for(let i = 0; i < allIDsArray.length-1; i++){\n            var ID = allIDsArray[i];\n            data.push({id: ID, info: localStorage.getItem(allIDsArray[i]).split('\\0')})\n        }\n    }  \n\n    var uploadedData = [];\n\n    /*                  CSV Reader                     */\n\n    const handleOnDrop = (data) => {\n        console.log('---------------------------')\n        console.log(data)\n        console.log('---------------------------')\n        uploadedData = data;\n    }\n    \n    const handleOnError = (err, file, inputElem, reason) => {\n        console.log(err)\n    }\n    \n    const handleOnRemoveFile = (data) => {\n        console.log('---------------------------')\n        console.log(data)\n        console.log('---------------------------')\n    }\n\n    /*******************************************************/\n\n    const uploadData = () => {\n        var allIDs = \"\";\n        for (let i = 1; i < uploadedData.length; i++){\n            allIDs = allIDs += uploadedData[i].data[0] + '\\0';\n            //const regex = /uploadedData[i].meta.delimiter/g;\n            localStorage.setItem(uploadedData[i].data[0],(uploadedData[i].data[1].replace(/,/g,'\\0')));\n        }\n        localStorage.setItem('',allIDs);\n    }\n\n    \n\n    return (\n        <div>\n            \n            <h2 style={{textAlign: 'center'}}>About</h2>\n            <p>This web app was made to keep track of plant waterings! It saves all data locally on the browser or on the web app if saved to the homescreen.</p>\n            \n            <h2 style={{textAlign: 'center'}}>Saving/Transfering Data</h2>\n            <p>To transfer this data to another phone or another browser. First, download the data from the following link</p>\n            <div style={{textAlign: 'center', marginBottom: '10px'}}>\n                <CSVLink data={data} headers={headers}>\n                    <button key=\"download\" style={styles.buttonStyle}>Download Data</button>\n                </CSVLink>\n            </div>\n            \n            <p>Then upload that csv file to the following:</p>\n            <div style={csvStyle}>\n                \n                <CSVReader\n                    onDrop={handleOnDrop}\n                    onError={handleOnError}\n                    noDrag\n                    addRemoveButton\n                    onRemoveFile={handleOnRemoveFile}\n                    style={uploadStyle}\n                >\n                    <span>Click to upload.</span>\n                </CSVReader>\n                <button key=\"upload\" onClick={uploadData} style={styles.buttonFlexStyle}>Submit</button>\n                \n                \n            </div>\n            <TabBarBottom/>\n        </div>\n    )\n\n}\n\nconst styles = {\n    buttonStyle: {\n        background:'#ffdfef', \n        borderRadius:'5px', \n        border:'none',\n        padding: '0 5px',\n        height: '30px',\n        ':hover': {\n            background: '#fff0f7',\n        }\n    },\n    buttonFlexStyle: {\n        background:'#ffdfef', \n        borderRadius:'5px', \n        border:'none',\n        padding: '0 5px',\n        height: '30px',\n        margin: 'auto 0 auto 10%',\n        ':hover': {\n            background: '#fff0f7',\n        }\n    },\n    uploadStyle: {\n        ':hover': {\n            border: '#fff0f7',\n        },\n    }\n}\n\n\nexport default Radium(About);\n","import React from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nexport default function DatePicking(props) {\n\n  //const handleChange = date => setDate(date);\n\n  const handleChange = date => {\n    props.onDateSubmit(date)\n  };\n\n\n  return <DatePicker  onChange={handleChange} placeholderText={props.DOLW} className={props.cName} closeOnScroll={e => e.target === document} withPortal portalId=\"root-portal\"/>;\n}\n","import React, {Component} from 'react';\nimport Radium from 'radium';\nimport PropTypes from 'prop-types';\nimport {SettingOutlined, CloseOutlined} from '@ant-design/icons';\n\n//import { DatePicker, List, Button, InputItem } from 'antd-mobile';\n//import { createForm } from 'rc-form';\n//import MyButton from './MyButton';\nimport leafyIcon from '../images/LeafyIcon.png';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport DatePicking from './DatePicking';\nimport DatePicker from 'react-mobile-datepicker';\n\n\nexport class Plant extends Component {\n    state = {\n        DOLW: '',\n        dateState: '',\n        time: new Date(),\n        isOpen: false,\n        //width: window.innerWidth,\n    }\n\n    // componentWillMount() {\n    //     window.addEventListener('resize', this.handleWindowSizeChange);\n    // }\n      \n    //   // make sure to remove the listener\n    //   // when the component is not mounted anymore\n    // componentWillUnmount() {\n    //     window.removeEventListener('resize', this.handleWindowSizeChange);\n    // }\n      \n    // handleWindowSizeChange = () => {\n    //     this.setState({ width: window.innerWidth });\n    // };\n\n    handleClick = () => {\n        this.setState({ isOpen: true });\n    }\n \n    handleCancel = () => {\n        this.setState({ isOpen: false });\n    }\n \n    handleSelect = (date) => {\n        const stringDate = `${('0' + (date.getMonth() + 1)).slice(-2)}/${('0' + date.getDate()).slice(-2)}/${date.getFullYear()}`\n        this.setState({ DOLW: stringDate, isOpen: false });\n        this.props.addDOLW(this.props.plant.id,stringDate)\n    }\n\n    onDateSubmit = (date) => {\n        let stringDate = `${('0' + (date.getMonth() + 1)).slice(-2)}/${('0' + date.getDate()).slice(-2)}/${date.getFullYear()}`\n        this.setState({dateState: stringDate})\n        this.props.addDOLW(this.props.plant.id,stringDate)\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        if(this.state.DOLW === \"\"){\n        }\n        else {\n            this.props.addDOLW(this.props.plant.id,this.state.DOLW);\n            \n        }\n        //this.setState({DOLW: this.props.plant.DOLW});\n        //this.refs['myForm'].submit()\n        //e.target.blur();\n        var name = this.props.plant.name\n        document.getElementById(name).blur();\n        this.setState({DOLW: ''})\n       \n    }\n\n    onChange = (e) => this.setState({[e.target.name]:e.target.value});\n\n    onClick = (e) => {\n        this.setState({DOLW: ''});\n    }\n\n    render() {\n        const isMobile = this.props.width <= 500;\n        const {id, name} = this.props.plant;\n        const monthMap = {\n            '1': 'Jan',\n            '2': 'Feb',\n            '3': 'Mar',\n            '4': 'Apr',\n            '5': 'May',\n            '6': 'Jun',\n            '7': 'Jul',\n            '8': 'Aug',\n            '9': 'Sep',\n            '10': 'Oct',\n            '11': 'Nov',\n            '12': 'Dec',\n        };\n        const dateConfig = {\n            'month': {\n                format: value => monthMap[value.getMonth() + 1],\n                caption: 'Mon',\n                step: 1,\n            },\n            'date': {\n                format: 'DD',\n                caption: 'Day',\n                step: 1,\n            },\n            'year': {\n                format: 'YYYY',\n                caption: 'Year',\n                step: 1,\n            },\n        };\n\n        if(isMobile){\n            return (\n                <div style={plantStyle} className={`${this.props.plant.show ? \"\" : \"hidden\"}`}> \n                    <div style={headerStyle}>\n                        <button key = \"Exit\" className={`${this.props.deleteMode ? \"icon\" : \"hiding icon\"}`} id=\"deletePlantButton\" onClick={this.props.delPlant.bind(this,id)} style={exitStyle}><CloseOutlined /></button>\n                        <button  key=\"More\"onClick={this.props.togglePop.bind(this,id)} style={viewMoreStyle}>\n                            <img src={leafyIcon} style={logoStyle}></img>    \n                        </button>\n                    </div>\n                    <div style={contentStyle}>\n                        <p style = {nameStyle}>\n                            {name}\n                        </p>\n                        <div style={lastWater}>\n                            <div style={dolwTitle}><p>Last Watered</p></div>\n                            <div style={floatLeft}><p style={colonStyle}>:</p></div>\n                            <div style={floatLeft}>\n                                <button\n                                    onClick={this.handleClick}\n                                    id={this.props.plant.name}\n                                    key=\"lastDOLW\"\n                                    style={dolwForm}\n                                    name=\"DOLW\">\n                                    {this.props.plant.DOLW}\n                                </button>\n            \n                                <DatePicker\n                                    value={this.state.time}\n                                    isOpen={this.state.isOpen}\n                                    onSelect={this.handleSelect}\n                                    onCancel={this.handleCancel} \n                                    dateConfig={dateConfig}\n                                    headerFormat='MM/DD/YYYY'\n                                    confirmText='select'\n                                    cancelText='cancel'\n                                />\n                                \n                            </div>\n                        </div>\n                    </div> \n                </div>\n            );\n        }\n        else {\n            return(\n                <div style={plantStyle}> \n                    <div style={headerStyle}>\n                        <button key = \"Exit\" id=\"deletePlantButton\" className={`${this.props.deleteMode ? \"icon\" : \"hiding icon\"}`} onClick={this.props.delPlant.bind(this,id)} style={exitStyle}><CloseOutlined/></button>\n                        <button key=\"More\"onClick={this.props.togglePop.bind(this,id)} style={viewMoreStyle}>\n                            <img src={leafyIcon} style={logoStyle}></img>\n                        </button>\n                    </div>\n                    <div style={contentStyle}>\n                        <p style = {nameStyle}>\n                            {name} {'\\n'}\n                        </p>\n                        <div style={lastWater}>\n                            <div style={dolwTitle}><p>Last Watered</p></div>\n                            <div style={floatLeft}><p style={colonStyle}>:</p></div>\n                            <div style={floatLeft}>\n                                \n                                <DatePicking DOLW={this.props.plant.DOLW} onDateSubmit={this.onDateSubmit} dateState={this.state.DOLW} cName={\"dolwForm\"} />\n                                \n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n        \n    }\n}\n\n//PropTypes\n// Plant.propTypes = {\n//     plants: PropTypes.object.isRequired\n// }\n\nconst plantStyle = {\n    background: '#cef9ad',\n    height: '100px',\n    width: '100px',\n    margin: '5px 5px',\n    textAlign: 'center',\n    borderRadius: '15px',\n    padding: '0x 20px',\n\n}\n\nconst headerStyle = {\n    position: 'relative',\n    bottom: '0px',\n    height: '25px',\n    margin: '0',\n}\n\nconst contentStyle = {\n    position: 'relative',\n    bottom: '0px',\n    height: '75px',\n    margin: '0',\n}\n\nconst exitStyle = {\n    background: 'none',\n    opacity: '1',\n    color: '#000',\n    //border: 'none',\n    padding: '0px',\n    margin: '0px',\n    cursor: 'pointer',\n    position: 'absolute',\n    left: '3px',\n    top: '0px',\n    fontSize: '12px',\n    // transition: 'transform 2s',\n    ':hover': {\n        fontSize: '14px',\n        top: '-2px',\n        color: '#cd2c2c',\n    }\n}\n\nconst viewMoreStyle = {\n    background: 'transparent',\n    color: '#000',\n    border: 'none',\n    padding: '0px 5px',\n    cursor: 'pointer',\n    position: 'absolute',\n    right: '3px',\n    top: '3px', \n    ':hover': {\n        //backgroundColor: 'white',\n        height: '20px',\n        //color: 'black',\n        //transition: 'all 0.2s',\n    }\n}\nconst logoStyle = {\n    height: '17px',\n    //backgrounnd: '#cef9e0',\n    display: 'block',\n    margin: '0 auto',\n}\n\nconst nameStyle = {\n    overflow: 'hidden',\n    padding: '0px 2px',\n    margin: '0px 0px 0px 0px',\n    fontSize: '14px',\n    lineHeight: '16px',\n    maxHeight: '32px',\n}\n\nconst lastWater = {\n    padding: '0px 2px',\n    width: 'inherit',\n    position: 'absolute',\n    bottom: '0px',\n}\n\nconst floatLeft= {\n    float: 'left',\n    margin: '0',\n    padding: '0',\n}\n\nconst dolwTitle = {\n    paddingTop: '5px',\n    fontSize: '6px',\n    width: '27px',\n    textAlign: 'center',\n    position: 'relative',\n    //bottom: '5px',\n    display: 'block',\n    float: 'left',\n}\n\nconst colonStyle = {\n    position: 'relative',\n    width: '6px',\n    display: 'block',\n}\n\nconst dolwForm = {\n    width:'60px',\n    padding: '2px 1px',\n    height: '20px',\n    //position: 'relative',\n    margin: '4px 0 0 0',\n    left: '5px',\n    backgroundColor: 'transparent',\n    backgroundRepeat: 'noRepeat',\n    overflow: 'hidden',\n    textAlign: 'center',\n    color: 'black',\n    border: '1px solid #000',\n    display: 'block',\n    fontSize: '10px',\n}\n\nPlant = Radium(Plant)\nexport default Plant;","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport { createStyles, fade, Theme, makeStyles } from '@material-ui/core/styles';\n\nimport SearchIcon from '@material-ui/icons/Search';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport { red } from '@material-ui/core/colors';\n//import SearchOutlined from '@ant-design/icons';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    search: {\n      position: 'relative',\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      '&:hover': {\n        backgroundColor: fade(theme.palette.common.white, 0.25),\n      },\n      marginLeft: 0,\n      width: '100%',\n      [theme.breakpoints.up('sm')]: {\n        marginLeft: theme.spacing(1),\n        width: 'auto',\n    \n      },\n      marginTop: theme.spacing(2),\n    },\n    searchIcon: {\n      padding: theme.spacing(0, 2),\n      height: '100%',\n      position: 'absolute',\n      pointerEvents: 'none',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    trashIcon: {\n        marginTop: theme.spacing(2),\n    },\n    trashRed: {\n        color: '#cd2c2c',\n    },\n    inputRoot: {\n      color: 'inherit',\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 0),\n      // vertical padding + font size from searchIcon\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n      transition: theme.transitions.create('width'),\n      width: '100%',\n      [theme.breakpoints.up('sm')]: {\n        width: '12ch',\n        '&:focus': {\n          width: '20ch',\n        },\n      },\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n  }),\n);\n\nexport default function SearchBar(props) {\n  const classes = useStyles();\n  const deletePlants = {\n    margin: '0 20px',\n    padding: '0',\n    background: 'transparent',\n    border: 'none',\n    //borderRadius: '5px',\n}\n    const initialSortBy = localStorage.getItem('sortBy')\n  const [sort, setSort] = React.useState(initialSortBy);\n  const [search, setSearch] = React.useState('');\n//   const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n//     setAge(event.target.value as string);\n//   };\n    const handleChange = (e) => {\n        setSort(e.target.value);\n        localStorage.setItem('sortBy', e.target.value);\n        props.handleChange(e.target.value);\n    }\n\n    const handleSearchChange = (e) => {\n        setSearch(e.target.value);\n        props.handleSearch(e.target.value);\n    }\n\n\n\n  return (\n    <Toolbar>\n    <div className={classes.search}>\n        <div className={classes.searchIcon}>\n            {/* <SearchOutlined /> */}\n            <SearchIcon/>\n        </div>\n        <InputBase\n            placeholder=\"Search…\"\n            classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n            }}\n            inputProps={{ 'aria-label': 'search' }}\n            value={search}\n            onChange={handleSearchChange}\n        />\n    </div>\n    <FormControl className={classes.formControl}>\n        <InputLabel id=\"demo-simple-select-label\">Sort by</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          value={sort}\n          onChange={handleChange}\n        >\n          <MenuItem value={'name'}>Name</MenuItem>\n          <MenuItem  value={'DOLW'}>Date</MenuItem>\n        </Select>\n    </FormControl>\n    <div className={classes.trashIcon}>\n        <button key=\"More\" className={props.deleteMode ? (classes.trashRed) : \"\"} onClick={props.togglePop} style = {deletePlants}>\n            {/* <SettingOutlined /> */}\n            <DeleteIcon/>\n        </button>\n    </div>\n    \n    </Toolbar>\n  );\n\n}\n","import React, {Component} from 'react'\nimport PropTypes from 'prop-types'\n\nexport class AddPlant extends Component {\n    state = {\n        name: ''\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        this.props.addPlant(this.state.name);\n        this.setState({name: ''});\n    }\n\n    onChange = (e) => this.setState({[e.target.name]:e.target.value})\n\n    render() {\n        return (\n            \n            <form id=\"addPlant\" onSubmit={this.onSubmit} style={{display: 'flex'}}>\n                <input\n                    id=\"addPlant\"\n                    type=\"text\"\n                    name=\"name\"\n                    style={{flex: '10', padding: '5px'}}\n                    placeholder=\"Add A New Plant!...\"\n                    value={this.state.name}\n                    onChange={this.onChange}\n                />\n                <input\n                    type=\"submit\"\n                    value=\"+\"\n                    className=\"btn_custom\"\n                    style={{flex: '1'}}\n                />\n            </form>\n        )\n    }\n}\n\nAddPlant.propTypes = {\n    addPlant: PropTypes.func.isRequired\n}\n\nexport default AddPlant","import React, {Component} from 'react';\nimport Plant from './Plant';\nimport $ from 'jquery';\n\nimport {SettingOutlined, CloseOutlined} from '@ant-design/icons';\n\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport InputBase from '@material-ui/core/InputBase';\n\nimport SearchBar from './materialUI/SearchBar';\n\nimport AddPlant from './AddPlant';\nimport PropTypes from 'prop-types';\n\n// const useStyles = makeStyles((theme) => ({\n//     formControl: {\n//       margin: theme.spacing(1),\n//       minWidth: 120,\n//     },\n//     selectEmpty: {\n//       marginTop: theme.spacing(2),\n//     },\n// }));\n\nclass Plants extends Component {\n    \n    state = {\n        sortBy: '',\n        deleteMode: false,\n    }\n\n    componentDidMount() {\n        var winHeight = window.innerHeight;\n        var headerHeight = $(\"header\").outerHeight();\n        var searchHeight = $(\"#searchBar\").height();\n        var navBotHeight = $(\"#tabBarBottom\").outerHeight();\n        \n        var contentHeight = winHeight-headerHeight-navBotHeight-searchHeight;\n        \n        $(\".plantParent\").height(contentHeight);\n\n        $(\"header\").css('touch-action', 'none') // disable actions\n        $(\"#addPlant\").css('touch-action', 'none') // disable actions\n        $(\"#tabBarBottom\").css('touch-action', 'none') // disable actions\n        //draggableElement.css('touch-action', 'auto') // restore actions\n    }\n\n    //classes = useStyles();\n    handleChange = (sort) => {\n        this.setState({sortBy: sort});\n        this.props.sortPlants(sort);\n    };\n\n    \n\n    togglePop = () => {\n        // $(\"[id='deletePlantButton']\").css('visibility', function(i, visibility) {\n        //     return (visibility == 'visible') ? 'hidden' : 'visible';\n        // });\n        // $(\"[id='deletePlantButton']\").css('transition', 'transform 2s')\n        // $(\"[id='deletePlantButton']\").css('transform', 'rotate(180deg)')\n        this.setState({deleteMode: !this.state.deleteMode})\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n            <div style={searchBar} id=\"searchBar\">\n                <SearchBar handleChange={this.handleChange} handleSearch={this.props.handleSearch} togglePop={this.togglePop} deleteMode={this.state.deleteMode}/>\n                \n            \n            </div>\n            <div className=\"plantParent\">\n                {/* <FormControl className={classes.formControl}> */}\n                \n                {/* <AddPlant addPlant={this.props.addPlant}/> */}\n                <div className='plants' id=\"main\">\n                    {this.props.plants.map((plant) => (\n                    \n                        plant.show ? <Plant key = {plant.id} plant = {plant}\n                        addDOLW = {this.props.addDOLW} delPlant={this.props.delPlant} togglePop = {this.props.togglePop} width={this.props.width} deleteMode={this.state.deleteMode}/> : null\n                    \n                    ))}\n                    \n                    \n                </div>\n            </div>\n            </React.Fragment>\n        );\n    }\n}\n\nconst searchBar = {\n    display: 'flex',\n    justifyContent: 'center',\n    borderBottom: 'solid 1px #d9f4df',\n}\n\nconst sortStyle = {\n    width: '20%',\n    marginLeft: 'auto',\n    marginRight: '5%',\n    marginBottom: 'auto',\n    marginTop: 'auto',\n}\n\n\n// Plants.propTypes = {\n//     plants: PropTypes.array.isRequired\n// }\n\nexport default Plants;\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nexport class PopUpTitle extends Component {\n    //const Date = props => {props.date};\n    \n    state = {\n        title: this.props.title\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        //this.props.updateDOLW(this.props.plant.id,this.state.DOLW);\n        //this.setState({DOLW: ''});\n        this.props.updateItem(this.props.popup.currId, 0 ,this.state.title);\n\n        document.getElementById(\"TitleHolderStyle\").blur();\n        //this.setState({title: ''})\n    }\n\n    onChange = (e) => this.setState({[e.target.name]:e.target.value});\n\n    onClick = (e) => {\n        this.setState({title: ''});\n        \n    }\n\n    render() {\n        return(\n                <div style={titleStyle}>\n                    {this.props.notEdit ? <div style={titleForm}>{this.props.title}</div> :\n                    <form onSubmit={this.onSubmit} onClick={this.onClick}>\n                        <input\n                            id=\"TitleHolderStyle\"\n                            type=\"text\"\n                            name=\"title\"\n                            style={titleFormEdit}\n                            placeholder={this.props.title}\n                            value={this.state.title}\n                            onChange={this.onChange}\n                        />\n                    </form>\n                    }\n                </div>\n        )\n    }\n}\n\n//PropTypes\nPopUpTitle.propTypes = {\n    currId: PropTypes.object.isRequired\n}\n\n// const nameStyle = {\n//     overflow: 'hidden',\n//     padding: '10px 0px',\n//     margin: '10px 0px',\n//     maxHeight: '58px',\n// }\n\nconst titleStyle= {\n    margin: '1rem',\n    padding: '0',\n    textAlign: 'center',\n    width: '100%',\n}\n\n// const dolwTitle = {\n//     fontSize: '10px',\n//     width: '40px',\n//     textAlign: 'center',\n//     position: 'relative',\n//     bottom: '5px',\n//     display: 'block',\n//     float: 'left',\n// }\n\nconst titleForm = {\n    width:'90%',\n    position: 'relative',\n    left: '50%',\n    marginLeft: '-45%',\n    padding: '0',\n    backgroundColor: 'transparent',\n    backgroundRepeat: 'noRepeat',\n    //overflow: 'scroll',\n    //overflowWrap: 'break-word',\n    textAlign: 'center',\n    color: 'black',\n    //display: 'inline',\n    display: 'block',\n    fontSize: '3vh',\n}\n\nconst titleFormEdit = {\n    border: 'solid 1px',\n    borderRadius: '4px',\n    width:'90%',\n    position: 'relative',\n    left: '50%',\n    marginLeft: '-45%',\n    padding: '0',\n    backgroundColor: 'transparent',\n    backgroundRepeat: 'noRepeat',\n    textAlign: 'center',\n    color: 'black',\n    display: 'block',\n    fontSize: '3vh',\n}\n\nexport default PopUpTitle;","import React from \"react\";\nimport PropTypes from 'prop-types';\n\nclass RemoveRow extends React.Component {\n  static propTypes = {\n    onUpdate: PropTypes.func.isRequired\n  }\n\n  static defaultProps = {\n    value: '&times;'\n  }\n\n  removeRow = () => {\n    this.props.handleRemoveSpecificRow(this.props.popup.currId, this.props.rowIndex);\n    this.props.removeSpecificRowState(this.props.rowIndex);\n  }\n\n  render() {\n    return [\n      <button\n        key={this.props.popup.currId}\n        className=\"btn btn-outline-danger btn-sm\"\n        onClick={this.removeRow}\n      >\n        &times;\n      </button>\n    ];\n  }\n}\n\nexport default RemoveRow;","import React from \"react\";\nimport RemoveRow from './RemoveRow';\n\nexport const columns = [{\n        dataField: 'index',\n        text: 'id',\n    },\n    {\n    dataField: 'DOLW',\n    text: 'Last Watered',\n    sort: true\n    },\n    {\n        dataField: 'remove',\n        text: '',\n        editorRenderer: (editorProps, value, row, column, rowIndex, columnIndex) => (\n            <RemoveRow />//popup={this.props.popup}/>\n          )\n  }\n];\n  \nexport const defaultSorted = [{\n    dataField: 'index',\n    order: 'asc'\n}];\n\n  export const options = {\n    withFirstAndLast: true, // Hide the going to First and Last page button\n    hidePageListOnlyOnePage: true,\n    sizePerPageList: [{\n      text: '5', value: 5\n    }]\n  };\n\n  ","import React from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nexport default function DatePicking(props) {\n    \n  //const handleChange = date => setDate(date);\n\n  const handleChange = date => {\n    props.onDateSubmit(props.rowIndex, date)\n  };\n\n  return <DatePicker  onChange={handleChange} placeholderText={props.DOLW} className={props.cName} closeOnScroll={e => e.target === document} withPortal portalId=\"root-portal\"/>;\n}\n","import React, {Component} from \"react\";\nimport PopUpTitle from './PopUpTitle';\n//import Table from 'react-bootstrap/Table';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport cellEditFactory from 'react-bootstrap-table2-editor';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport RemoveRow from './RemoveRow';\nimport {EditOutlined, CloseOutlined} from '@ant-design/icons';\nimport Radium from 'radium';\nimport * as BSTConst from './BSTableConstants';\nimport DatePicking from './DatePicking';\nimport DatePicker from 'react-mobile-datepicker';\n\n\nexport default class PopUp extends Component {\n    state = {\n        rows: [{}],\n        notEdit: true,\n        isOpen: false,\n        currIndex: 0,\n    };\n\n    constructor(prop){\n        super(prop);\n        const id = this.props.popup.currId;\n        const info = localStorage.getItem(id).split('\\0');\n        const inputState = [...this.state.rows];\n        // for(let i = 1; i < info.length; i+=2){\n        //     if(info.length-1 > i){\n        //         inputState[i-1] = {\n        //             index: ,\n        //             DOLW: info[i],\n        //             note: info[i+1],\n        //         }\n        //     }\n        // }\n        info.slice(1).map((date,index) => {\n            if(info.length-1 > index + 1){\n                inputState[index] = {\n                    index: index,\n                    DOLW: date\n                }\n            }\n        });\n\n        this.state = {\n            rows: inputState,\n            notEdit: true,\n        }\n    } \n\n    onDateSubmit = (index,date) => {\n        const id = this.props.popup.currId;\n        const info = localStorage.getItem(id).split('\\0');\n        const inputState = [...this.state.rows];\n        let stringDate = `${('0' + (date.getMonth() + 1)).slice(-2)}/${('0' + date.getDate()).slice(-2)}/${date.getFullYear()}`\n\n        //console.log(\"%s, %s\",index+1, info.length-2);\n        //if(index+1 === info.length-2) {\n        this.props.updateItem(id,index+1,stringDate)\n        //}\n        \n        // for(let i = 1; i < info.length; i+=2){\n        //     if(index===i-1){\n        //         inputState[index] = {\n        //             index: index,\n        //             DOLW: stringDate,\n        //             note: note,\n        //         }\n        //     }\n        // }\n        info.slice(1).map((date,currIndex) => {\n            if(index === currIndex){\n                inputState[index] = {\n                    index: index,\n                    DOLW: stringDate\n                }\n            }\n        });\n        this.setState({\n            rows: inputState,\n\n        })\n        \n        \n    }\n\n    handleChange = (id,index) => e => {\n        const{name,value}= e.target;\n        const rows = [...this.state.rows];\n        rows[index] = {\n            [name]: value\n        };\n        this.setState({\n            rows\n        });\n\n        let plantArray = localStorage.getItem(id).split('\\0')\n        let updatedPlant = ''\n        for(let i = 0; i < plantArray.length - 1; i++){\n          if (i-1 === index){\n            updatedPlant = updatedPlant + value + '\\0'\n          }\n          else {\n              updatedPlant = updatedPlant + plantArray[i] + '\\0'\n          }\n        }\n        localStorage.setItem(id,updatedPlant)\n    };\n\n    removeSpecificRowState = (index) => {\n        const rows = [...this.state.rows]\n        rows.splice(index, 1)\n        this.setState({ rows: rows.map((eachRow,index) => {\n            eachRow.index = index;\n            return eachRow;\n          })});\n    }\n\n    handleClick = () => {\n        this.props.toggle();\n    };\n\n    handleDateClick = (rowIndex) => {\n        this.setState({ isOpen: true , currIndex: rowIndex});\n    }\n\n    handleDateCancel = () => {\n        this.setState({ isOpen: false });\n    }\n\n    handleDateSelect = (date) => {\n        const index = this.state.currIndex;\n        const stringDate = `${('0' + (date.getMonth() + 1)).slice(-2)}/${('0' + date.getDate()).slice(-2)}/${date.getFullYear()}`\n        const id = this.props.popup.currId;\n        const info = localStorage.getItem(id).split('\\0');\n        const inputState = [...this.state.rows];\n        info.slice(1).map((date,currentIndex) => {\n            if(index === currentIndex){\n                inputState[index] = {\n                    index: index,\n                    DOLW: stringDate\n                }\n            }\n        });\n        this.setState({\n            rows: inputState,\n            isOpen: false,\n        })\n        this.props.updateItem(id,index+1,stringDate);\n    }\n\n    handleEditClick = () => {\n        this.setState({notEdit: !this.state.notEdit});\n    };\n\n    handleOutsideClick = (e) => {\n        if(e.target.classList.contains('modal_custom')){\n            this.props.toggle();\n        }\n    }\n\n    removeRowFormatter = (cell,row) => <RemoveRow popup={this.props.popup} rowIndex={row.index} handleRemoveSpecificRow={this.props.handleRemoveSpecificRow} removeSpecificRowState={this.removeSpecificRowState}/>\n\n    render() {\n        const isMobile = this.props.width <= 500;\n\n        const id = this.props.popup.currId;\n        const info = localStorage.getItem(id).split('\\0');\n        \n        const monthMap = {\n            '1': 'Jan',\n            '2': 'Feb',\n            '3': 'Mar',\n            '4': 'Apr',\n            '5': 'May',\n            '6': 'Jun',\n            '7': 'Jul',\n            '8': 'Aug',\n            '9': 'Sep',\n            '10': 'Oct',\n            '11': 'Nov',\n            '12': 'Dec',\n        };\n        const dateConfig = {\n            'month': {\n                format: value => monthMap[value.getMonth() + 1],\n                caption: 'Mon',\n                step: 1,\n            },\n            'date': {\n                format: 'DD',\n                caption: 'Day',\n                step: 1,\n            },\n            'year': {\n                format: 'YYYY',\n                caption: 'Year',\n                step: 1,\n            },\n        };\n\n        const columns = [{\n            dataField: 'index',\n            text: 'id',\n            hidden: 'true',\n            headerStyle: (colum, colIndex) => {\n                return { width: '20%', textAlign: 'center' };\n            }},\n            {\n                dataField: 'remove',\n                text: '',\n                headerStyle: (colum, colIndex) => {\n                    return { width: '20%', textAlign: 'center' };\n                },\n                isDummyField: true,\n                hidden: this.state.notEdit,\n                editable: false,\n                formatter: this.removeRowFormatter,\n                \n            },\n            {\n                dataField: 'DOLW',\n                text: 'Last Watered',\n                sort: true,\n                formatter: (cell)=> {\n                    let newDate = cell;\n                    console.log(newDate)\n                    if(newDate !== undefined){\n                        var b = newDate.split(\"/\");\n                        newDate = new Date(b[2],b[0]-1,b[1]);\n                    }\n                    else {\n                        newDate = new Date(cell);\n                    }\n                    return `${('0' + (newDate.getUTCMonth() + 1)).slice(-2)}/${('0' + newDate.getUTCDate()).slice(-2)}/${newDate.getUTCFullYear()}`;\n                    \n                },\n                // editor: {\n                //     type: Type.DATE\n                // }\n                editorRenderer: (editorProps, value, row, column, rowIndex, columnIndex) => (\n                    <DatePicking { ...editorProps } rowIndex={rowIndex} DOLW={ value } cName={\"popupDate\"} onDateSubmit={this.onDateSubmit} />\n                )\n            },\n        ];\n\n        const columnsMobile = [{\n            dataField: 'index',\n            text: 'id',\n            hidden: 'true',\n            headerStyle: (colum, colIndex) => {\n                return { width: '20%', textAlign: 'center' };\n            }},\n            {\n                dataField: 'remove',\n                text: '',\n                headerStyle: (colum, colIndex) => {\n                    return { width: '20%', textAlign: 'center' };\n                },\n                isDummyField: true,\n                hidden: this.state.notEdit,\n                editable: false,\n                formatter: this.removeRowFormatter,\n                \n            },\n            {\n                dataField: 'DOLW',\n                text: 'Last Watered',\n                sort: true,\n                editable: !this.state.notEdit,\n                formatter: (cell)=> {\n                    let newDate = cell;\n                    console.log(newDate)\n                    if(newDate !== undefined){\n                        var b = newDate.split(\"/\");\n                        newDate = new Date(b[2],b[0]-1,b[1]);\n                    }\n                    else {\n                        newDate = new Date(cell);\n                    }\n                    return `${('0' + (newDate.getMonth() + 1)).slice(-2)}/${('0' + newDate.getDate()).slice(-2)}/${newDate.getFullYear()}`;\n                    \n                },\n                // editor: {\n                //     type: Type.DATE\n                // }\n                editorRenderer: (editorProps, value, row, column, rowIndex, columnIndex) => (\n                    <React.Fragment>\n      \n                    <button\n                        onClick={() => this.handleDateClick(rowIndex)}\n                        id={this.props.popup.currId}\n                        key=\"lastDOLW\"\n                        //style={dolwForm}\n                        className=\"popupDate\"\n                        name=\"DOLW\">\n                        {value}\n                    </button>\n            \n                    <DatePicker\n                        value={this.state.time}\n                        isOpen={this.state.isOpen}\n                        onSelect={this.handleDateSelect}\n                        onCancel={this.handleDateCancel} \n                        dateConfig={dateConfig}\n                        headerFormat='MM/DD/YYYY'\n                        confirmText='select'\n                        cancelText='cancel'\n                    />\n                    </React.Fragment>\n                )\n            },\n        ];\n\n        if(isMobile){\n            return (\n                <div className=\"modal_custom\" onClick={this.handleOutsideClick}>\n                    <div className=\"modal_content_custom\">\n                        <button key=\"edit\"onClick={this.handleEditClick} style={editStyle}><EditOutlined /></button>\n                        <button key=\"close\" onClick={this.handleClick} style={exitStyle}><CloseOutlined /></button>\n\n                        <PopUpTitle popup={this.props.popup} title={info[0]} updateItem={this.props.updateItem} notEdit={this.state.notEdit}/>\n\n                        <BootstrapTable\n                            bootstrap4\n                            popup={this.props.popup}\n                            keyField=\"index\"\n                            data={ this.state.rows }\n                            columns={columnsMobile}\n                            defaultSorted={ BSTConst.defaultSorted }\n                            pagination={ paginationFactory(BSTConst.options) } \n                            cellEdit={ cellEditFactory({\n                                mode: 'click',\n                                afterSaveCell: (oldValue,newValue,row,col) => { \n                                    this.props.updateDOLW(this.props.popup.currId,row.index,newValue)\n                                },\n                                blurToSave: true,\n                            }) }\n                        />\n                            \n                    </div>\n                </div>\n            );\n        }\n        else {\n            return (\n                <div className=\"modal_custom\" onClick={this.handleOutsideClick}>\n                    <div className=\"modal_content_custom\">\n                        <button key=\"edit\"onClick={this.handleEditClick} style={editStyle}><EditOutlined /></button>\n                        <button key=\"close\" onClick={this.handleClick} style={exitStyle}><CloseOutlined /></button>\n\n                        <PopUpTitle popup={this.props.popup} title={info[0]} updateItem={this.props.updateItem} notEdit={this.state.notEdit}/>\n\n                        <BootstrapTable\n                            bootstrap4\n                            popup={this.props.popup}\n                            keyField=\"index\"\n                            data={ this.state.rows }\n                            columns={columns }\n                            defaultSorted={ BSTConst.defaultSorted }\n                            pagination={ paginationFactory(BSTConst.options) } \n                            cellEdit={ cellEditFactory({\n                                mode: 'click',\n                                afterSaveCell: (oldValue,newValue,row,col) => { \n                                    this.props.updateDOLW(this.props.popup.currId,row.index,newValue)\n                                },\n                                blurToSave: true,\n                            }) }\n                        />\n                            \n                    </div>\n                </div>\n            );\n        }\n    }\n\n}\n\nconst editStyle = {\n    background: 'none',\n    opacity: '1',\n    color: '#000',\n    border: 'none',\n    padding: '0px',\n    margin: '0px',\n    cursor: 'pointer',\n    position: 'absolute',\n    left: '3px',\n    top: '-5px',\n    fontSize: '20px',\n    ':hover': {\n        fontSize: '19px',\n    }\n\n}\n\nconst exitStyle = {\n    background: 'none',\n    opacity: '1',\n    color: '#000',\n    border: 'none',\n    padding: '0px',\n    margin: '0px',\n    cursor: 'pointer',\n    height: '0px',\n    width: '0px',\n    position: 'absolute',\n    right: '22px',\n    top: '-7px',\n    fontSize: '20px',\n    ':hover': {\n        fontSize: '19px',\n    },\n}\n\nPopUp = Radium(PopUp)","import React, {Component} from \"react\";\nimport {Text, View, StyleSheet} from 'react-native';\nimport PopUpTitle from '../popup/PopUpTitle';\nimport {EditOutlined, CloseOutlined} from '@ant-design/icons';\nimport Radium from 'radium';\nimport DatePicking from '../popup/DatePicking';\nimport DatePicker from 'react-mobile-datepicker';\nimport $ from 'jquery';\n\n\nexport default class AddPopUp extends Component {\n    state = {\n        isOpen: false,\n        name: '',\n        time: new Date(),\n        DOLW: '',\n    };\n\n    constructor(prop){\n        super(prop);\n\n    }  \n\n    onSubmit = (e) => {\n        e.preventDefault();\n        this.props.addPlant(this.state.name,this.state.DOLW);\n        this.setState({name: '',DOLW:''});\n    }\n\n    onSubmitName = (e) => {\n        e.preventDefault();\n        $('#lastWaterBtn').click();\n    }\n\n    onChange = (e) => this.setState({[e.target.name]:e.target.value})\n\n    onDateSubmit = (date) => {\n        let stringDate = `${('0' + (date.getMonth() + 1)).slice(-2)}/${('0' + date.getDate()).slice(-2)}/${date.getFullYear()}`\n        this.setState({\n            DOLW: stringDate,\n        })\n    }\n\n    handleClick = () => {\n        this.props.toggle();\n    };\n\n    handleDateClick = () => {\n        this.setState({ isOpen: true, DOLW: \"\"});\n    }\n\n    handleDateCancel = () => {\n        this.setState({ isOpen: false });\n    }\n\n    handleDateSelect = (date) => {\n        let stringDate = `${('0' + (date.getMonth() + 1)).slice(-2)}/${('0' + date.getDate()).slice(-2)}/${date.getFullYear()}`\n        this.setState({\n            DOLW: stringDate,\n        })\n    }\n\n    handleOutsideClick = (e) => {\n        if(e.target.classList.contains('modal_custom')){\n            this.props.toggle();\n        }\n    }\n\n\n    render() {\n        const isMobile = this.props.width <= 500;\n        \n        const monthMap = {\n            '1': 'Jan',\n            '2': 'Feb',\n            '3': 'Mar',\n            '4': 'Apr',\n            '5': 'May',\n            '6': 'Jun',\n            '7': 'Jul',\n            '8': 'Aug',\n            '9': 'Sep',\n            '10': 'Oct',\n            '11': 'Nov',\n            '12': 'Dec',\n        };\n        const dateConfig = {\n            'month': {\n                format: value => monthMap[value.getMonth() + 1],\n                caption: 'Mon',\n                step: 1,\n            },\n            'date': {\n                format: 'DD',\n                caption: 'Day',\n                step: 1,\n            },\n            'year': {\n                format: 'YYYY',\n                caption: 'Year',\n                step: 1,\n            },\n        };\n\n        if(isMobile){\n            return (\n                <div className=\"modal_custom\" onClick={this.handleOutsideClick}>\n                    <div className=\"modal_content_custom\">\n                        <button key=\"close\" onClick={this.handleClick} style={exitStyle}><CloseOutlined /></button>\n\n                        {/* <PopUpTitle popup={this.props.popup} title={\"Add Plant\"} updateItem={this.props.updateItem} notEdit={this.state.notEdit}/> */}\n                        <View style={styles.inputFields}>\n                        <form id=\"addPlantPopup\" onSubmit={this.onSubmit}>\n                            <View style={styles.eachLine}>\n                                <View style={styles.setWidth}>\n                                    <Text style={styles.textRight}>\n                                        Name:\n                                    </Text>\n                                </View>\n                                <View style={styles.textInput}>\n                                    <textarea\n                                        id=\"addPlantPopup\"\n                                        type=\"text\"\n                                        name=\"name\"\n                                        style={radium_styles.base}\n                                        placeholder=\"\"\n                                        value={this.state.name}\n                                        onChange={this.onChange}\n                                        onSubmit={this.onSubmitName}\n                                    />\n                                </View>\n                            </View>\n                            <View style={styles.eachLine}>\n                                <View style={styles.setWidth}>\n                                    <Text style={styles.textRight}>\n                                        Last Watered:\n                                    </Text>\n                                </View>\n                                \n                                <View style={styles.textInput}>\n                                    <input\n                                        type=\"button\"\n                                        onClick={()=> this.handleDateClick()}\n                                        id=\"lastWaterBtn\"\n                                        key=\"addPopupMobileDatePicker\"\n                                        //className=\"popupDate\"\n                                        style={radium_styles.date}\n                                        name=\"DOLW\"\n                                        value={this.state.DOLW}\n                                    />\n                                </View>\n\n                                <DatePicker\n                                    value={this.state.time}\n                                    isOpen={this.state.isOpen}\n                                    onSelect={this.handleDateSelect}\n                                    onCancel={this.handleDateCancel} \n                                    dateConfig={dateConfig}\n                                    headerFormat='MM/DD/YYYY'\n                                    confirmText='select'\n                                    cancelText='cancel'\n                                />\n                            </View>\n                            <View style={styles.eachLine}>\n                                <input\n                                    type=\"submit\"\n                                    value=\"Add\"\n                                    //className=\"btn_custom\"\n                                    style={radium_styles.add_Button}\n                                />\n                            </View>\n                            \n                        </form>\n                        </View>\n                            \n                    </div>\n                </div>\n            );\n        }\n        else {\n            return (\n                <div className=\"modal_custom\" onClick={this.handleOutsideClick}>\n                    <div className=\"modal_content_custom\">\n                        <button key=\"close\" onClick={this.handleClick} style={exitStyle}><CloseOutlined /></button>\n                        \n                        <View style={styles.inputFields}>\n                        <form id=\"addPlantPopup\" onSubmit={this.onSubmit}>\n                            <View style={styles.eachLine}>\n                                <View style={styles.setWidth}>\n                                    <Text style={styles.textRight}>\n                                        Name:\n                                    </Text>\n                                </View>\n                                <View style={styles.textInput}>\n                                    <textarea\n                                        id=\"addPlantPopup\"\n                                        type=\"text\"\n                                        name=\"name\"\n                                        style={radium_styles.base}\n                                        placeholder=\"\"\n                                        value={this.state.name}\n                                        onChange={this.onChange}\n                                        onSubmit={this.onSubmitName}\n                                    />\n                                </View>\n                            </View>\n                            <View style={styles.eachLine}>\n                                <View style={styles.setWidth}>\n                                    <Text style={styles.textRight}>\n                                        Last Watered:\n                                    </Text>\n                                </View>\n                                \n                                <View style={styles.textInput}>\n                                    <DatePicking DOLW={this.state.DOLW} onDateSubmit={this.onDateSubmit} dateState={this.state.DOLW} cName={\"addPopupForm\"} />\n                                </View>\n                                \n                            </View>\n                            \n                            <div style={eachLine}>\n                                <input\n                                    type=\"submit\"\n                                    value=\"Add\"\n                                    //className=\"btn_custom\"\n                                    style={radium_styles.add_Button}\n                                />\n                            </div>\n                            \n                        </form>\n                        </View>\n\n                            \n                    </div>\n                </div>\n            );\n        }\n    }\n\n}\n\nconst exitStyle = {\n    background: 'none',\n    opacity: '1',\n    color: '#000',\n    border: 'none',\n    padding: '0px',\n    margin: '0px',\n    cursor: 'pointer',\n    height: '0px',\n    width: '0px',\n    position: 'absolute',\n    right: '22px',\n    top: '-7px',\n    fontSize: '20px',\n    ':hover': {\n        fontSize: '19px',\n    },\n}\n\nconst eachLine = {\n    zIndex: '-1 !important',\n    //display: 'flex',\n    flexDirection: 'row',\n    marginTop: '10%',\n    justifyContent: 'center',\n}\n\nconst styles = StyleSheet.create({\n    inputFields: {\n        position: 'relative',\n        //left: '-10%',\n    },\n    textRight: {\n        textAlign: 'right',\n    },\n    sameLine: {\n        display: 'flex',\n        flexDirection: 'row',\n    },\n    eachLine: {\n        //display: 'flex',\n        flexDirection: 'row',\n        marginTop: '10%',\n        justifyContent: 'center',\n    },\n    textInput: {\n        width: '70%',\n        fontSize: '2vh',\n        textAlign: 'left',\n    },\n    setWidth: {\n        width: '50%',\n        justifyContent: 'flex-end',\n        paddingBottom: '2px',\n        //lineHeight: '25px',\n    },\n});\n\n\nvar radium_styles = {\n    base: {\n      background: 'transparent',\n      height: '4vh',\n      lineHeight: '5vh',\n      padding: '0 2px',\n      marginLeft: '10%',\n      border: 'solid black 1px',\n   \n      // Adding interactive state couldn't be easier! Add a special key to your\n      // style object (:hover, :focus, :active, or @media) with the additional rules.\n        '::placeholder': {\n            // background: color('#000')\n            //   .lighten(0.2)\n            //fontSize: '17px'\n            color: '#aaa',\n            justifyContent: 'flex-end',\n        },\n        '::-webkit-input-placeholder': {\n            color: '#aaa',\n            justifyContent: 'flex-end',\n        },\n        \n        '::-moz-placeholder': {\n            color: '#aaa',\n            justifyContent: 'flex-end',\n        },\n        \n        '::-ms-placeholder': {\n            color: '#aaa',\n            justifyContent: 'flex-end',\n        },\n    },\n    date: {\n        background: 'transparent',\n        width: '55%',\n        border: 'solid black 1px',\n        textAlign: 'left',\n        height: '4vh',\n        lineHeight: '5vh',\n        padding: '0 2px',\n        marginLeft: '10%',\n    },\n\n    add_Button: {\n        //flex: '1',\n        width: '80%',\n        display: 'inline-block',\n        border: 'none',\n        borderRadius: '10px',\n        background: '#cef9ad',\n        color: '#000',\n        padding: '5px 0px',\n        cursor: 'pointer',\n\n        ':hover': {\n            background: '#d2ffb1',\n        }\n    }\n}\n\nAddPopUp = Radium(AddPopUp)","import React, {Component} from 'react';\nimport ReactDOM from 'react-dom'\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport {HashRouter} from \"react-router-dom\";\nimport $ from 'jquery';\nimport 'antd-mobile/dist/antd-mobile.css';\nimport { disableBodyScroll, enableBodyScroll, clearAllBodyScrollLocks } from 'body-scroll-lock';\n\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\n\nimport Plants from './components/Plants';\n\nimport PopUp from './components/popup/PopUp';\nimport AddPopUp from './components/addPopup/AddPopUp'\n\nimport TabBarBottom from './components/layout/TabBarBottom'\n\nimport './App.css';\n\nimport {v4 as uuidv4} from 'uuid';\nimport { EuroCircleFilled } from '@ant-design/icons';\n\nfunction loadPlants() {\n  const allIDs = localStorage.getItem('')\n  try {\n    let initialStateArray = []\n    const IDsArray = allIDs.split('\\0')\n\n    for(let i = 0; i < IDsArray.length-1; i++){\n      const plantArray = localStorage.getItem(IDsArray[i]).split('\\0')\n      const plantName = plantArray[0]\n      let currDOLW = '';\n      if(plantArray.length > 2){\n        currDOLW = plantArray[plantArray.length-2]\n      }\n      const loadPlant = {\n        id: IDsArray[i],\n        name: plantName,\n        DOLW: currDOLW,\n        show: true,\n      }\n      initialStateArray.push(loadPlant)\n    }\n    if (initialStateArray.length > 0){\n      return initialStateArray\n    }\n    else {\n      return []\n    }\n  }\n  catch {\n    console.log(\"Error loading local storage\")\n    return []\n  }\n}\n\nconst nowTimeStamp = Date.now();\nconst now = new Date(nowTimeStamp);\nconst utcOffset = new Date(now.getTime() - (now.getTimezoneOffset() * 60000));\n\n\nclass App extends Component {\n  targetElement = null;\n  constructor(prop) {\n    super(prop);\n    this.state = {\n      width: window.innerWidth,\n      dpValue: now,\n      idt: utcOffset.toISOString().slice(0,10),\n      popup:  {\n        seen: false,\n        currId: '',\n      },\n      addPopup: {\n        seen: false,\n      },\n      plants: loadPlants(),\n    }\n  }\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange);\n    \n  }\n  \n  // make sure to remove the listener\n  // when the component is not mounted anymore\n  componentWillUnmount() {\n      window.removeEventListener('resize', this.handleWindowSizeChange);\n\n    // 5. Useful if we have called disableBodyScroll for multiple target elements,\n    // and we just want a kill-switch to undo all that.\n    // OR useful for if the `hideTargetElement()` function got circumvented eg. visitor\n    // clicks a link which takes him/her to a different page within the app.\n    clearAllBodyScrollLocks();\n  }\n    \n  handleWindowSizeChange = () => {\n      this.setState({ width: window.innerWidth });\n  };  \n\n  componentDidMount() {\n    this.targetElement = document.querySelector('#bodybody');\n    \n  }\n  showTargetElement = () => {\n    // ... some logic to show target element\n \n    // 3. Disable body scroll\n    disableBodyScroll(this.targetElement, {\n      allowTouchMove: el => {\n        while (el && el !== document.body) {\n          if (el.getAttribute('body-scroll-lock-ignore') !== null) {\n            return true;\n          }\n     \n          el = el.parentNode;\n        }\n      },\n    });\n  };\n \n  hideTargetElement = () => {\n    // ... some logic to hide target element\n \n    // 4. Re-enable body scroll\n    enableBodyScroll(this.targetElement);\n  };\n\n  togglePop = (id) => {\n    this.setState({\n      popup:{\n        seen: !this.state.popup.seen,\n        currId: id\n      }\n    });\n  };\n\n  toggleAddPop = () => {\n    this.setState({\n      addPopup:{\n        seen: !this.state.addPopup.seen,\n      }\n    })\n  }\n\n  updateItem = (id,index,item) => {\n    const plantArray = localStorage.getItem(id).split('\\0');\n    let updateString = '';\n    for(let i = 0; i < plantArray.length-1; i++){\n      if(i === index){\n          updateString += item + '\\0';\n      }\n      else {\n        updateString += plantArray[i]  + '\\0';\n      }\n    }\n    if(index === 0){\n      this.setState({ plants: this.state.plants.map(plant => {\n        if(plant.id === id){\n          plant.name = item;\n        }\n        return plant;\n      })});\n    }\n    else if(index === plantArray.length-2) {\n      this.setState({ plants: this.state.plants.map(plant => {\n        if(plant.id === id){\n            plant.DOLW = item;\n        }\n        return plant;\n      })});\n    }\n    localStorage.setItem(id,updateString);\n  }\n\n  sortPlants = (sortBy) => {\n    if(sortBy === \"name\"){\n      this.nameSortPlants()\n    }\n    else if(sortBy === \"DOLW\"){\n      this.dateSortPlants()\n    }\n  }\n\n  nameSortPlants = () => {\n    //const allIDs = localStorage.getItem('').split('\\0');\n    var allPlants = this.state.plants;\n    allPlants.sort(function(a,b){\n      var nameA = a.name.toUpperCase();\n      var nameB = b.name.toUpperCase();\n      if(nameA < nameB){\n        return -1\n      }\n      if(nameA > nameB){\n        return 1;\n      }\n      return 0;\n    });\n    this.setState({plants: allPlants})\n    var sortedIDs = \"\";\n    for(let i = 0; i < allPlants.length; i++){\n      sortedIDs += allPlants[i].id + '\\0'\n    }\n    localStorage.setItem('',sortedIDs);\n  }\n\n  dateSortPlants = () => {\n    var allPlants = this.state.plants;\n    allPlants.sort(function(a,b){\n      var nameA = a.DOLW;\n      var nameB = b.DOLW;\n      if(nameA < nameB){\n        return -1\n      }\n      if(nameA > nameB){\n        return 1;\n      }\n      return 0;\n    });\n    this.setState({plants: allPlants})\n    var sortedIDs = \"\";\n    for(let i = 0; i < allPlants.length; i++){\n      sortedIDs += allPlants[i].id + '\\0'\n    }\n    localStorage.setItem('',sortedIDs);\n  }\n\n  handleSearch = (search) => {\n    this.setState({ plants: this.state.plants.map(plant => {\n      console.log(plant.name)\n      console.log(search)\n      if(!plant.name.includes(search)){\n          plant.show = false;\n      }\n      else {\n        plant.show = true;\n      }\n      return plant;\n    })});\n  }\n\n  addDOLW = (id,DOLW) => {\n    localStorage.setItem(id,localStorage.getItem(id)+ DOLW  + '\\0')\n    this.setState({ plants: this.state.plants.map(plant => {\n      if(plant.id === id){\n        plant.DOLW = DOLW\n      }\n      return plant;\n    })});\n  }\n\n  delPlant = (id) => {\n    let allIDs = localStorage.getItem('')\n    const IDsArray = allIDs.split('\\0')\n    let newIDsArray = ''\n    for(let i = 0; i < IDsArray.length - 1; i++){\n      if (IDsArray[i] !== id){\n        newIDsArray = newIDsArray + IDsArray[i] + '\\0'\n      }\n    }\n    localStorage.setItem('',newIDsArray)\n    localStorage.removeItem(id)\n    this.setState({plants: [...this.state.plants.filter(plant => plant.id !== id)]});\n  }\n\n  addPlant = (name) => {\n    const newPlant = {\n      id: uuidv4(),\n      name: name,\n      DOLW: '',\n      show: true,\n    }\n    this.setState({\n      plants: [...this.state.plants, newPlant]\n    })\n    localStorage.setItem(newPlant.id,newPlant.name + newPlant.DOLW + '\\0')\n    const allIDs = localStorage.getItem('')\n    if (allIDs != null) {\n      localStorage.setItem('',allIDs+newPlant.id+'\\0')\n    }\n    else {\n      localStorage.setItem('',newPlant.id+'\\0')\n    }\n    \n  }\n  addPlant = (name,DOLW) => {\n    const newPlant = {\n      id: uuidv4(),\n      name: name,\n      DOLW: DOLW,\n      show: true,\n    }\n    this.setState({\n      plants: [...this.state.plants, newPlant]\n    })\n    localStorage.setItem(newPlant.id,newPlant.name + '\\0' + newPlant.DOLW + '\\0')\n    const allIDs = localStorage.getItem('')\n    if (allIDs != null) {\n      localStorage.setItem('',allIDs+newPlant.id+'\\0')\n    }\n    else {\n      localStorage.setItem('',newPlant.id+'\\0')\n    }\n    \n  }\n\n  handleRemoveSpecificRow = (id,index) => {\n    let plantArray = localStorage.getItem(id).split('\\0')\n    let updatedPlant = plantArray[0] + '\\0';\n    for(let i = 1; i < plantArray.length-1; i++){\n      if (i-1 !== index){\n        updatedPlant = updatedPlant + plantArray[i]  + '\\0';\n      }\n    }\n    if(index+1 === plantArray.length-2) {\n      this.setState({ plants: this.state.plants.map(plant => {\n        if(plant.id === id){\n          if(plantArray.length-1<3){\n            plant.DOLW = '';\n          }\n          else {\n            plant.DOLW = plantArray[plantArray.length-3];\n          }\n        }\n        return plant;\n      })});\n    }\n    localStorage.setItem(id,updatedPlant)\n  }\n\n  updateDOLW = (id, index, newValue) => {\n    let plantArray = localStorage.getItem(id).split('\\0')\n    let updatedPlant = plantArray[0] + '\\0';\n    for(let i = 1; i < plantArray.length-1; i++){\n      if (i-1 !== index){\n        updatedPlant = updatedPlant + plantArray[i]  + '\\0';\n      }\n      else {\n          updatedPlant = updatedPlant + newValue + '\\0'\n      }\n    }\n    if(index+1 === plantArray.length-2) {\n      this.setState({ plants: this.state.plants.map(plant => {\n        if(plant.id === id){\n          plant.DOLW = newValue;\n          \n        }\n        return plant;\n      })});\n    }\n    localStorage.setItem(id,updatedPlant)\n    \n\n}\n\n\n  render() {\n    return (\n      <HashRouter basename=\"/\">\n        <div className=\"App\" >\n          <div className=\"container_custom\" >\n            {this.state.popup.seen ? <PopUp popup ={this.state.popup} toggle={this.togglePop} updateItem={this.updateItem} handleRemoveSpecificRow={this.handleRemoveSpecificRow} updateDOLW={this.updateDOLW} width={this.state.width}/> : null}\n            {this.state.addPopup.seen ? <AddPopUp addPopup={this.state.addPopup} toggle={this.toggleAddPop} addPlant={this.addPlant} width={this.state.width}/> : null}\n            <Header />\n            <div className=\"content\">\n              <Route exact path=\"/\" render={props=>(\n                <React.Fragment>\n                  <Plants plants={this.state.plants} addDOLW={this.addDOLW} delPlant={this.delPlant} togglePop={this.togglePop} width={this.state.width} addPlant={this.addPlant} sortPlants={this.sortPlants} handleSearch={this.handleSearch}/>\n                </React.Fragment>\n              )} />\n              <Route path=\"/about\" component={About} />\n            </div>\n            <TabBarBottom toggleAddPop={this.toggleAddPop}/>\n          </div>\n        </div>\n      </HashRouter>\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nrequire('react-bootstrap-table-next/dist/react-bootstrap-table2.min.css');\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}